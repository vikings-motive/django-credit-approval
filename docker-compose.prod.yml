version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backups:/backups  # For database backups
    networks:
      - credit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - credit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: credit-approval:prod
    env_file: .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=credit_approval.settings
      - ENVIRONMENT=production
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - logs:/app/logs
      - ./data:/app/data:ro  # Read-only Excel files
    networks:
      - credit_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: credit-approval:prod
    env_file: .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=credit_approval.settings
      - ENVIRONMENT=production
    entrypoint: []
    command: celery -A credit_approval worker -l info --concurrency=4
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - logs:/app/logs
      - ./data:/app/data:ro
    networks:
      - credit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "celery -A credit_approval inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    image: credit-approval:prod
    env_file: .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=credit_approval.settings
      - ENVIRONMENT=production
    entrypoint: []
    command: celery -A credit_approval beat -l info
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - logs:/app/logs
    networks:
      - credit_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/static:ro
      - media_volume:/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # SSL certificates
      - nginx_logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - credit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  credit_network:
    driver: bridge